[
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Insert",
  "event_frequency": "All",
  "modified": "2023-07-24 12:00:22.024511",
  "module": "Bank of Punjab",
  "name": "Markup Calculations",
  "reference_doctype": "Salary Slip",
  "script": "if doc.loans:\n    total_no_of_days = frappe.utils.date_diff(doc.end_date,doc.start_date)\n    for row in doc.loans:\n        if row.loan and doc.employee:\n            paid_principal_amount = frappe.db.sql(f\"\"\"\n                            SELECT ifnull(sum(amount_paid),0) as total_paid FROM `tabLoan Repayment` \n                            WHERE against_loan = '{row.loan}' and applicant = '{doc.employee}'\n                                  and docstatus = 1  \"\"\",as_dict=1)\n            if paid_principal_amount:\n                paid_amount = paid_principal_amount[0].total_paid\n            else:\n                paid_amount = 0\n            total_paid_amount = row.total_payment + paid_amount\n            total_principal = frappe.db.get_value(\"Loan\",row.loan,\"total_payment\")\n            frappe.db.set_value(\"Loan\",row.loan,\"remaining_principal_amount\",total_principal - total_paid_amount)\n            \n            markup_details = frappe.new_doc(\"Accumulated Markup\")\n            markup_details.update({\n                \"parenttype\": \"Loan\",\n                \"parentfield\": \"accumulated_markup_details\",\n                \"parent\": row.loan,\n                \"against_no_of_days\": total_no_of_days,\n                \"markup_rate\": 12,\n                \"remaining_principal_amount\": total_principal - total_paid_amount,\n                \"calculated_markup_amount\": (((total_principal - total_paid_amount) * 12) * total_no_of_days)/ 36500,\n                \"salary_slip\": doc.name,\n                \"transaction_date\": doc.posting_date\n            })\n            markup_details.insert(ignore_permissions=True)\n            lates_markup = (((total_principal - total_paid_amount) * 12) * total_no_of_days)/ 36500\n            previous_markup = frappe.db.get_value(\"Loan\",row.loan,\"accumulated_markup\")\n            frappe.db.set_value(\"Loan\",row.loan,\"accumulated_markup\",previous_markup + lates_markup )",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "event_frequency": "All",
  "modified": "2023-07-24 16:22:39.894106",
  "module": "Bank of Punjab",
  "name": "Rescheduling Loan Repayments",
  "reference_doctype": "Re Schedule Loan Repayment",
  "script": "if doc.date_of_repayment:\n    first_day = frappe.utils.get_first_day(doc.date_of_repayment)\n    last_day = frappe.utils.add_days(first_day, 30)\n    loans = frappe.db.sql(f\"select parent from `tabRepayment Schedule` where payment_date between '{first_day}' and '{last_day}' and docstatus = 1\",as_dict=1)\n    doc.re_schedule_loan_repayment_table = []\n    for loan in loans:\n        emp = frappe.db.get_value(\"Loan\",loan.parent,\"applicant\")\n        emp_name = frappe.db.get_value(\"Loan\",loan.parent,\"applicant_name\")\n        doc.append('re_schedule_loan_repayment_table', {\n        'loan': loan.parent,\n        'employee':emp,\n        'employee_name':emp_name\n        })",
  "script_type": "DocType Event"
 }
]